# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Deploy CD

on:
  push:
    branches: [ master ]

env:
  MYSQL_DATABASE: student
  MYSQL_ROOT_PASSWORD: password
  #AWS & Elastic Beanstalk
  AWS_REGION: ap-southeast-1
  EB_ENVIRONMENT_NAME: Webappfullstack-env
  EB_APPLICATION_NAME: Web App Fullstack
  EB_DEPLOYMENT_PACKAGE: aws-elasticbeanstalk/docker-compose.yml
jobs:
  deploy:
    runs-on: [self-hosted, Windows, X64, Fullstack_Runner]
    steps:
      - uses: actions/checkout@v2

      - name: Generate image number
        id: image-number
        run: echo "::set-output name=IMAGE_NUMBER::$(Get-Date -UFormat "%Y.%m.%d.%H.%M.%S")"

#      - name: Login to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Maven Clean Package and Push Image to Docker Hub
        run: |
          IMAGE_NUMBER=${{steps.image-number.outputs.IMAGE_NUMBER}}
          mvn clean package
          -P build-frontend
          -P jib-push-image-to-dockerhub
          -Dapp.image.tag=${{steps.image-number.outputs.IMAGE_NUMBER}}
          -DskipTests

      - name: Update and commit app version in docker-compose.yaml
        run: |
          IMAGE_NUMBER=${{steps.image-number.outputs.IMAGE_NUMBER}}
          echo -e "Current aws-elasticbeanstalk/docker-compose.yml\n$(cat aws-elasticbeanstalk/docker-compose.yml)"
          sed -i -E 's_(ntloc/web-app-fullstack-springboot-angular:)([^"]*)_\1'${IMAGE_NUMBER}'_' aws-elasticbeanstalk/docker-compose.yml
          echo -e "Current aws-elasticbeanstalk/docker-compose.yml\n$(cat aws-elasticbeanstalk/docker-compose.yml)"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add aws-elasticbeanstalk/docker-compose.yml
          git commit -m "new app version: ${IMAGE_NUMBER}"
          git push
      - name: Deploy to Server
        working-directory: aws-elasticbeanstalk
        run: docker compose up -d